import { ProjectConfig, VariationConfig } from "./project";
export declare type CookieReader = {
    /**
     * Get the HTTP cookie from the current request with the given name.
     * The result should be URL decoded from the browser request.
     */
    get: (name: string) => string;
};
export declare type CookieWriter = {
    /**
     * Set the HTTP cookie for the current response, with the given name, the given value.
     * The expires field of the cookie must be `expireInDays` days from now.
     * The domain field of the cookie should be the domain you run your test projects on.
     * The cookie value should be URL encoded before reaching the browser.
     */
    set: (name: string, value: string, expireInDays: number) => void;
};
export declare type CookieJar = CookieReader & CookieWriter;
/**
 * PreviewData is used by the SDK when users are previewing tests without activating them.
 */
export declare type PreviewData = {
    projectID: number;
    variationID: number;
};
export declare class JSONCookieCodec {
    underlying: CookieJar;
    constructor(wrap: CookieJar);
    get(name: string): any;
    set(name: string, value: unknown): void;
}
/**
 * WebsiteData is a cookie persistence layer compatible with the frontend js-sdk.
 * It helps us keep the visitor ID stable, and remember variation allocations when
 * project configs change.
 */
export declare class WebsiteData {
    websiteID: string;
    jsonCookie: any;
    constructor(websiteID: string, cookies: CookieReader);
    save(cookies: CookieWriter): void;
    isCompatible(): boolean;
    getVisitorID(): string | null;
    setVisitorID(visitorID: string): void;
    rememberAllocation(project: ProjectConfig, variation: VariationConfig): void;
    rememberNullAllocation(project: ProjectConfig): void;
    /**
     * Get current allocation info from the website data.
     *
     * @param project check existing allocation for this project
     * @returns the allocated variation if it exists, null if a null allocation exists, undefined if there is no info
     */
    getAllocation(project: ProjectConfig): VariationConfig | undefined | null;
    /**
     * Get current preview config from the website data.
     *
     * @returns the current preview config if it exists, null otherwise
     */
    getPreviewData(): PreviewData | null;
    private get;
    private set;
}
export declare function visitorHasOptedIn(cookies: CookieReader): boolean;
