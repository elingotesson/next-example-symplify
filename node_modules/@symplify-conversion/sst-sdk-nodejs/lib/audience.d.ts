import { Environment, List, PrimitiveFn, RulesEngineError, TracedList } from "./rules-engine";
declare type AudienceError = RulesEngineError;
/**
 * Audience contains rules to be evaluated for activating projects.
 */
export declare class Audience {
    rules: List;
    /**
     * Create a new Audience with the given rules.
     *
     * @throws AudienceError if the rules are invalid
     * @param rules JSON string describing the audience rules, see docs/Audience.md
     */
    constructor(rules: string);
    /**
     * eval interprets the rules in the given environment, and returns true if
     * the audience matches.
     */
    eval(env: Environment): boolean | AudienceError;
    /**
     * trace interprets the rules in the given environment, and annotates the
     * rules with partial values.
     */
    trace(env: Environment): TracedList | AudienceError;
}
export declare const primitives: Record<string, PrimitiveFn>;
export {};
